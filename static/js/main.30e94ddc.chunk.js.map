{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Lweet.js","components/LweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_IDr","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Lweet","lweetObj","isOwner","editing","setEditing","text","newLweet","setNewLweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","evnet","src","width","height","LweetFactory","userObj","lweet","setLweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","creatorId","createdAt","Date","now","collection","add","maxLength","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","accept","Home","lweets","setLweets","useEffect","onSnapshot","snapshot","lweetArray","docs","map","Navigation","to","displayName","refreshUser","newDisplayName","setNewDisplayName","history","useHistory","getMyLweets","where","orderBy","get","lweeets","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","Profile","from","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAKMA,G,kBAAiB,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,gBACnBK,MAAOL,mcAAYM,oBAGrBC,IAASC,cAAcV,GAEhB,IAAMW,EAAmBF,IACnBG,EAAcH,IAASI,OACvBC,EAAYH,EAAiBI,YAC7BC,EAAiBL,EAAiBM,U,OC4BlCC,EA5CE,WACb,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GACd,MAEIA,EADAC,OAASC,EADb,EACaA,KAAMC,EADnB,EACmBA,MAEN,UAATD,EACAV,EAASW,GACO,aAATD,GACPR,EAAYS,IAEdC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACbL,EAAMM,iBADO,UAINX,EAJM,gCAMQZ,EAAYwB,+BAA+BhB,EAAME,GANzD,OAMLe,EANK,+CASQzB,EAAY0B,2BAA2BlB,EAAOE,GATtD,QASLe,EATK,eAWTE,QAAQC,IAAIH,GAXH,kDAaTV,EAAS,KAAMc,SAbN,0DAAH,sDAiBd,OACI,qCACI,uBAAMR,SAAUA,EAAhB,UACI,uBAAOF,KAAK,QAAQW,KAAK,OAAOC,YAAY,QAAQC,UAAQ,EAACZ,MAAOZ,EAAOQ,SAAUA,IACrF,uBAAOG,KAAK,WAAWW,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACZ,MAAOV,EAAUM,SAAUA,IAClG,uBAAOc,KAAK,SAASV,MAAOR,EAAa,iBAAmB,YAC3DE,KAEL,sBAAMmB,QATQ,kBAAMpB,GAAc,SAACqB,GAAD,OAAWA,MAS7C,SAA+BtB,EAAa,UAAY,sBChBrDuB,EAvBF,WACT,IAAMC,EAAa,uCAAG,WAAOnB,GAAP,mBAAAK,EAAA,4DAGN,YAFKH,EAAWF,EAApBC,OAASC,MAGbkB,EAAW,IAAItC,EAAiBE,KAAKqC,mBACrB,WAATnB,IACPkB,EAAW,IAAItC,EAAiBE,KAAKsC,oBANvB,SAQCvC,EAAYwC,gBAAgBH,GAR7B,OAQZZ,EARY,OASlBE,QAAQC,IAAIH,GACZE,QAAQC,IAAIX,EAAMC,OAAOC,MAVP,2CAAH,sDAYvB,OACA,gCACI,cAAC,EAAD,IACA,gCACI,wBAAQA,KAAK,SAASc,QAASG,EAA/B,oBACA,wBAAQjB,KAAK,SAASc,QAASG,EAA/B,2B,QCkCOK,EArDD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,QACtB,EAA8BpC,oBAAS,GAAvC,mBAAOqC,EAAP,KAAgBC,EAAhB,KACA,EAAgCtC,mBAASmC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAA3B,EAAA,0DACP4B,OAAOC,QAAQ,sDADR,gCAGRjD,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,uBAIRlD,EAAemD,WAAWb,EAASc,eAAeF,SAJ1C,2CAAH,qDAQbG,EAAgB,kBAAMZ,GAAW,SAACX,GAAD,OAAWA,MAC5Cb,EAAQ,uCAAE,WAAOJ,GAAP,SAAAK,EAAA,6DACZL,EAAMM,iBADM,SAENrB,EAAUkD,IAAV,iBAAwBV,EAASW,KAAMK,OAAO,CAChDZ,KAAKC,IAHG,OAKZU,IALY,2CAAF,sDAad,OACA,8BAEQb,EAEQ,uBAAMvB,SAAUA,EAAhB,UACI,uBAAOS,KAAK,OAAOV,MAAO2B,EAAUf,UAAQ,EAACD,YAAY,iCAAQf,SAZpE,SAAC2C,GACd,IACavC,EACTH,MADAC,OAASE,MAEb4B,EAAY5B,MASI,wBAAQa,QAASwB,EAAjB,oBACA,uBAAO3B,KAAK,SAASV,MAAM,cAInC,qCACI,6BAAKsB,EAASI,OACbJ,EAASc,eAAiB,qBAAKI,IAAKlB,EAASc,cAAeK,MAAM,OAAOC,OAAO,SAChFnB,GACG,qCACI,wBAAQV,QAASgB,EAAjB,0BACA,wBAAQhB,QAASwB,EAAjB,iC,QCWbM,EArDM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,EAAyBzD,mBAAS,IAAlC,mBAAO0D,EAAP,KAAaC,EAAb,KACA,EAAoC3D,mBAAS,IAA7C,mBAAO4D,EAAP,KAAmBC,EAAnB,KAEM/C,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACbL,EAAMM,iBACFiC,EAAgB,GACH,IAAdW,EAHU,wBAIHE,EAAgBjE,EAAekE,MAAMC,MAArB,UAA8BP,EAAQQ,IAAtC,YAA6CC,gBAJ1D,SAKcJ,EAAcK,UAAUP,EAAW,YALjD,cAKHQ,EALG,gBAMaA,EAASL,IAAIM,iBAN1B,OAMTpB,EANS,sBAQPd,EAAW,CACbI,KAAMmB,EACNY,UAAWb,EAAQQ,IACnBM,UAAWC,KAAKC,MAChBxB,iBAZS,UAePtD,EAAU+E,WAAW,UAAUC,IAAIxC,GAf5B,QAgBbwB,EAAS,IACTE,EAAc,IAjBD,4CAAH,sDAoCd,OACI,uBAAM/C,SAAUA,EAAhB,UACI,uBAAOS,KAAK,OAAOC,YAAY,sBAAsBoD,UAAW,IAAKnE,SAnB5D,SAACC,GACd,IACaG,EACTH,EADAC,OAASE,MAEb8C,EAAS9C,IAeoFA,MAAO6C,IAChG,uBAAOnC,KAAK,OAAOd,SAdN,SAACC,GAClB,IACMmE,EADmBnE,EAAlBC,OAAQmE,MACO,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IAAsBC,EAAYD,EAA3BE,cAAeD,OACtBtB,EAAcsB,IAElBJ,EAAOM,cAAcR,IAM0BS,OAAO,YAClD,uBAAO/D,KAAK,SAASV,MAAM,aAC1B+C,GACG,gCACI,qBAAKP,IAAMO,EAAYN,MAAM,OAAOC,OAAO,SAC3C,wBAAQ7B,QATE,kBAAMmC,EAAc,OAS9B,0BCxBL0B,EAvBF,SAAC,GAAe,IAAd9B,EAAa,EAAbA,QACX,EAA2BzD,mBAAS,IAApC,mBAAOwF,EAAP,KAAcC,EAAd,KAUA,OATAC,qBAAU,WACN/F,EAAU+E,WAAW,UAAUiB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAClD,GAAD,oBACjCC,GAAID,EAAIC,IACLD,EAAI3B,WAEXuE,EAAUI,QAEhB,IAEE,qCACI,cAAC,EAAD,CAAcpC,QAASA,IACvB,8BACK+B,EAAOO,KAAI,SAACrC,GAAD,OACR,cAAC,EAAD,CAAsBvB,SAAUuB,EAAOtB,QAASsB,EAAMY,YAAcb,EAAQQ,KAAhEP,EAAMZ,aCPvBkD,EAXI,SAAC,GAAD,IAAGvC,EAAH,EAAGA,QAAH,OACf,8BACI,+BACI,6BACI,cAAC,IAAD,CAAMwC,GAAG,IAAT,oBAEJ,6BACI,eAAC,IAAD,CAAMA,GAAG,WAAT,UAAqBxC,GAAWA,EAAQyC,YAAxC,wBCLD,cAA8B,IAA3BzC,EAA0B,EAA1BA,QAAQ0C,EAAkB,EAAlBA,YACtB,EAA2CnG,mBAASyD,EAAQyC,YAAczC,EAAQyC,YAAc,aAAhG,mBAAOE,EAAP,KAAsBC,EAAtB,KACMC,EAAUC,cAMVC,EAAW,uCAAG,4BAAAzF,EAAA,sEACMpB,EACrB+E,WAAW,UACX+B,MAAM,YAAY,KAAKhD,EAAQQ,KAC/ByC,QAAQ,YAAY,QACpBC,MALe,OACVC,EADU,OAMhBxF,QAAQC,IAAIuF,EAAQd,KAAKC,KAAI,SAAAlD,GAAG,OAAIA,EAAI3B,WANxB,2CAAH,qDAcXJ,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBACFyC,EAAQyC,cAAgBE,EAFf,gCAGH3C,EAAQoD,cAAc,CAACX,YAAaE,IAHjC,OAITD,IAJS,2CAAH,sDAUd,OAHAT,qBAAU,WACNc,MACF,IAEE,qCACI,uBAAM1F,SAAUA,EAAhB,UACI,uBAAOS,KAAK,OAAOC,YAAY,eAAef,SAnBzC,SAACC,GACd,IACaG,EACTH,EADAC,OAASE,MAEbwF,EAAkBxF,IAewDA,MAAOuF,IACzE,uBAAO7E,KAAK,SAASV,MAAM,sBAE/B,2CACA,wBAAQa,QApCM,WAClBjC,EAAYqH,UACZX,IACAG,EAAQS,KAAK,OAiCT,yBCRGC,EA7BI,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAYxD,EAA0B,EAA1BA,QAAS0C,EAAiB,EAAjBA,YAEtC,OADC/E,QAAQC,IAAIoC,GAET,eAAC,IAAD,WACKwD,GAAc,cAAC,EAAD,CAAYxD,QAASA,IACpC,cAAC,IAAD,UACKwD,EACG,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAM1D,QAASA,MAEnB,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAAS3D,QAASA,EAAS0C,YAAaA,MAE5C,cAAC,IAAD,CAAUkB,KAAK,IAAIpB,GAAG,SAI9B,qCACI,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAUE,KAAK,IAAIpB,GAAG,eCmB3BqB,MA5Cf,WACE,MAAuBtH,oBAAS,GAAhC,mBAAOuH,EAAP,KAAYC,EAAZ,KACA,EAAmCxH,oBAAS,GAA5C,mBAAOiH,EAAP,KAAkBQ,EAAlB,KACA,EAA8BzH,mBAAS,MAAvC,mBAAOyD,EAAP,KAAgBiE,EAAhB,KA2BA,OAzBAhC,qBAAU,WACRjG,EAAYkI,oBAAmB,SAACC,GAC3BA,GACDH,GAAc,GACdC,EAAW,CACTxB,YAAa0B,EAAK1B,YAClBjC,IAAI2D,EAAK3D,IACT4C,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,OAG9CJ,GAAc,GAEhBD,GAAQ,QAGV,IAWA,qCACGD,EACD,cAAC,EAAD,CAAWN,WAAYA,EAAYxD,QAASA,EAAS0C,YAZrC,WAClB,IAAMyB,EAAOnI,EAAYqI,YACzBJ,EAAW,CACTxB,YAAa0B,EAAK1B,YAClBjC,IAAK2D,EAAK3D,IACV4C,cAAe,SAACgB,GAAD,OAAUD,EAAKf,cAAcgB,SAW1C,eAEF,4CAAgB,IAAIrD,MAAOuD,cAA3B,iBCvCNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.30e94ddc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_IDr\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  \n  export const firebaseInstance = firebase;\n  export const authService = firebase.auth();\n  export const dbService = firebaseInstance.firestore();\n  export const storageService = firebaseInstance.storage();","import React, { useState } from \"react\";\nimport { authService } from 'fbase';\n\nconst AuthForm = () => {\n    const [email,setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\")\n    const [newAccount, setNewAccount] = useState(true)\n    const [error, setError] = useState(\"\")\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n        if( name === 'email' ) {\n            setEmail(value);\n        } else if (name === 'password')\n            setPassword(value);\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if(newAccount) {\n                //create account\n                data = await authService.createUserWithEmailAndPassword(email,password)\n            } else {\n                //login\n                data = await authService.signInWithEmailAndPassword(email, password)\n            }\n            console.log(data);\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n    const toggleAccount = () => setNewAccount((prev) => !prev );\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange}/>\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"}></input>\n                {error}\n            </form>\n            <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Accoun\"}</span>\n        </>\n    )\n}\nexport default AuthForm","import React from 'react';\nimport { authService, firebaseInstance } from 'fbase';\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const { target: {name}, } = event;\n        let provider;\n        if(name === \"google\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider)\n        console.log(data)\n        console.log(event.target.name)\n    }\nreturn (\n<div>\n    <AuthForm/>\n    <div>\n        <button name=\"google\" onClick={onSocialClick}>GOOGLE</button>\n        <button name=\"github\" onClick={onSocialClick}>GITHUB</button>\n    </div>\n</div>\n)\n}\nexport default Auth\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"../fbase\";\n\nconst Lweet = ({lweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newLweet, setNewLweet] = useState(lweetObj.text);\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제 하시겠습니까?\")\n        if(ok) {\n            await dbService.doc(`lweets/${lweetObj.id}`).delete();\n            await storageService.refFromURL(lweetObj.attachmentUrl).delete();\n        }\n    }\n    \n    const toggleEditing = () => setEditing((prev) => !prev) \n    const onSubmit= async (event) => {\n        event.preventDefault();\n        await dbService.doc(`lweets/${lweetObj.id}`).update({\n            text:newLweet,\n        });\n        toggleEditing();\n    }\n    const onChange = (evnet) => {\n        const {\n            target: {value},\n        } = event;\n        setNewLweet(value);\n    }\n    return (\n    <div>\n        {\n            editing ? \n                (\n                    <form onSubmit={onSubmit}>\n                        <input type=\"text\" value={newLweet} required placeholder=\"수정하세요\" onChange={onChange}></input>\n                        <button onClick={toggleEditing}>Cancel</button>\n                        <input type=\"submit\" value=\"Update\"></input>\n                    </form>\n                ) :\n                (\n                <>\n                    <h4>{lweetObj.text}</h4>\n                    {lweetObj.attachmentUrl && <img src={lweetObj.attachmentUrl} width=\"50px\" height=\"50px\"></img>}\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Lweet</button>\n                            <button onClick={toggleEditing}>Edit Lweet</button>\n                        </>\n                    )\n                    }\n                </>\n            )\n        }\n    </div>\n    )\n}\nexport default Lweet","import React, {useState} from 'react';\nimport {v4 as uuidv4} from 'uuid';\nimport { storageService,dbService } from 'fbase';\n\nconst LweetFactory = ({ userObj }) => {\n    const [lweet,setLweet] = useState(\"\")\n    const [attachment, setAttachment] = useState(\"\")\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if(attachment != \"\"){\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment,\"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        const lweetObj = {\n            text: lweet,\n            creatorId: userObj.uid,\n            createdAt: Date.now(),\n            attachmentUrl,\n        }\n\n        await dbService.collection(\"lweets\").add(lweetObj);\n        setLweet(\"\");\n        setAttachment(\"\");\n    }\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setLweet(value);\n    }\n    const onFileChange = (event) => {\n        const {target:{files}} = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget:{result},} = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    }\n    const onClearPhotoClick = () => setAttachment(null)\n    return (\n        <form onSubmit={onSubmit}>\n            <input type=\"text\" placeholder=\"What's on your mind\" maxLength={120} onChange={onChange} value={lweet}/>\n            <input type=\"file\" onChange={onFileChange} accept=\"image/*\" />\n            <input type=\"submit\" value=\"L witter\"/>\n            {attachment && (\n                <div>\n                    <img src ={attachment} width=\"50px\" height=\"50px\"/>\n                    <button onClick={onClearPhotoClick}>Clear</button>\n                </div>)}\n        </form>\n    )\n}\nexport default LweetFactory","import React, {useState, useEffect} from 'react';\nimport { dbService } from 'fbase';\nimport Lweet from 'components/Lweet';\nimport LweetFactory from 'components/LweetFactory';\n\nconst Home = ({userObj}) => {\n    const [lweets,setLweets] = useState([])\n    useEffect(()=> {\n        dbService.collection(\"lweets\").onSnapshot((snapshot)=>{\n            const lweetArray = snapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data(),\n            }))\n            setLweets(lweetArray)\n        })\n    },[])\n    return (\n        <>\n            <LweetFactory userObj={userObj}/>\n            <div>\n                {lweets.map((lweet) => \n                    <Lweet key={lweet.id} lweetObj={lweet} isOwner={lweet.creatorId === userObj.uid}/>\n                )}\n            </div>\n        </>\n    )\n}\n\nexport default Home\n","import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nconst Navigation = ({ userObj }) => \n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/profile\">{userObj && userObj.displayName}'s Profile</Link>\n            </li>\n        </ul>\n    </nav>\nexport default Navigation","import React, {useEffect, useState} from 'react';\nimport { authService } from 'fbase';\nimport {useHistory} from 'react-router-dom'\nimport { dbService } from \"../fbase\";\n\nexport default ({ userObj,refreshUser }) => {\n    const [newDisplayName,setNewDisplayName] = useState(userObj.displayName ? userObj.displayName : \"Anonymous\")\n    const history = useHistory();\n    const onLogOutClick = () => {\n        authService.signOut();\n        refreshUser();\n        history.push(\"/1\");\n    }\n    const getMyLweets = async () => {\n        const lweeets = await dbService\n        .collection(\"lweets\")\n        .where(\"creatorId\",\"==\",userObj.uid)\n        .orderBy(\"createdAt\",\"desc\")\n        .get();\n        console.log(lweeets.docs.map(doc => doc.data()))\n    }\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value)\n    }\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if( userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({displayName: newDisplayName})\n            refreshUser();\n        }\n    }\n    useEffect(()=>{\n        getMyLweets();\n    },[])\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"Display Name\" onChange={onChange} value={newDisplayName}></input>\n                <input type=\"submit\" value=\"Update Profile\"></input>\n            </form>\n            <span>Profile</span>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n}\n","import React from 'react';\nimport { HashRouter as Router, Redirect, Route, Switch, } from 'react-router-dom';\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Navigation from 'components/Navigation';\nimport Profile from '../routes/Profile';\n\n const AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n     console.log(userObj)\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\" >\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\" >\n                            <Profile userObj={userObj} refreshUser={refreshUser}/>\n                        </Route>\n                        <Redirect from=\"*\" to=\"/\"/>\n                    </>\n                )\n                : \n                <>\n                    <Route exact path=\"/\" >\n                        <Auth></Auth>\n                    </Route>\n                    <Redirect from=\"*\" to=\"/\"/>\n                </>\n                }\n            </Switch>\n        </Router>\n    )\n}\nexport default AppRouter","import React, { useState, useEffect } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'fbase';\n\nfunction App() {\n  const [init,setInit] = useState(false);\n  const [isLoggedIn,setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user)=>{\n      if(user) {\n        setIsLoggedIn(true)\n        setUserObj({\n          displayName: user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setIsLoggedIn(false)\n      }\n      setInit(true)\n    }\n    )\n  },[])\n  const refreshUser = () => {\n    const user = authService.currentUser\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    })\n\n  }\n  return (\n    <>\n      {init ? (\n      <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} refreshUser={refreshUser} />\n      )\n      : \n      (\n        \"Initializing\"\n      )}\n      <footer>&copy; {new Date().getFullYear()}LWitter</footer>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}